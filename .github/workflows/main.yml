# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Start
        run: echo CI started!

      # Runs a set of commands using the runners shell
      - name: Setup Python
        uses: actions/setup-python@v1
        with: 
          python-version: 3.8.6

      # Runs a set of commands using the runners shell
      - name: Upgrade pip
        run: |
          pip install --upgrade pip
          
      # Runs a set of commands using the runners shell
      - name: Test environment
        run: |
          make test_environment
          
      # Runs a set of commands using the runners shell
      - name: Install dependencies
        run: |
          make requirements

      # Runs a set of commands using the runners shell
      - name: Lint
        continue-on-error: true
        run: |
          make lint

      # Runs a set of commands using the runners shell
      - name: Black
        continue-on-error: true
        run: |
          make black

      # Runs a set of commands using the runners shell
      - name: Sphinx docs
        continue-on-error: true
        run: |
          make sphinx
      
      # Archive docs
      - name: Archive docs
        uses: actions/upload-artifact@v2
        with:
          name: docs
          path: |
            docs/_build/html

      # Runs a set of commands using the runners shell
      - name: Make features from data
        run: |
          make features
      
      # Archive processed data
      - name: Archive processed data
        uses: actions/upload-artifact@v2
        with:
          name: data-features
          path: |
            data/processed/dataset.csv

      # Runs a set of commands using the runners shell
      - name: Search for hyperparameters
        continue-on-error: true
        run: |
          make hypersearch

      # Runs a set of commands using the runners shell
      - name: Train a model
        run: |
          make train

      # Runs a set of commands using the runners shell
      - name: Validate the model
        continue-on-error: true
        run: |
          make validate

      # Runs a set of commands using the runners shell
      - name: Test serving the model
        continue-on-error: true
        run: |
          make serve && make test-serve
      
      # Archive model training and hyperparameters search
      - name: Archive hyperparameters search
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: hyperparams-search
          path: |
            models/hyperparams-search

      - name: Archive model training
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: model
          path: |
            models/models-training

  dockerize-pipeline:

    runs-on: ubuntu-latest
    
    needs: dockerize-api

    steps:
      - uses: actions/checkout@v1

      # Login to docker
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build docker image
      - name: Build
        run: docker build -f Dockerfile.pipeline -t cars-price-pipeline .

      # Save docker image
      - name: Save
        run: docker save -o cars-price-pipeline-docker-image.tar cars-price-pipeline


      # Archive docker image as artifact
      - name: Archive docker image as artifact
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: cars-price-pipeline-docker-image
          path: cars-price-pipeline-docker-image.tar

      # Tag the image      
      - name: Tags
        run: |
          docker tag cars-price-pipeline ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-pipeline:${{ github.sha }}
          docker tag cars-price-pipeline ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-pipeline:latest

      # Push the image
      - name: Push
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-pipeline:${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-pipeline:latest

  dockerize-api:

    runs-on: ubuntu-latest
    
    needs: heroku

    steps:
      - uses: actions/checkout@v1

      # Import artifacts build job
      #- name: Import archive
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: model
      #    path: /home/runner/work/cars-prices/cars-prices/models/models-training
          
      # RUN PIPELINE ONCE (TEMPORARY : TO BE REMOVED)
      - name: Run pipeline
        run: |
          make requirements
          make features
          make train

      # Display structure of downloaded files
      - name: Display structure of downloaded files
        run: ls -R

      # Login to docker
      - name: Docker login
        run: docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build docker image
      - name: Build
        run: docker build -f Dockerfile.api -t cars-price-api .

      # Save docker image
      - name: Save
        run: docker save -o cars-price-api-docker-image.tar cars-price-api


      # Archive docker image as artifact
      - name: Archive docker image as artifact
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: cars-price-api-docker-image
          path: cars-price-api-docker-image.tar

      # Tag the image      
      - name: Tags
        run: |
          docker tag cars-price-api ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-api:${{ github.sha }}
          docker tag cars-price-api ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-api:latest

      # Push the image
      - name: Push
        run: |
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-api:${{ github.sha }}
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/cars-price-api:latest

  heroku:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        
      # RUN PIPELINE ONCE (TEMPORARY : TO BE REMOVED)
      - name: Run pipeline
        run: |
          make requirements
          make features
          make train
      
      # Display structure of downloaded files
      - name: Rename dockerfile and delete other one
        run: |
          rm /home/runner/work/cars-prices/cars-prices/Dockerfile.pipeline
          mv /home/runner/work/cars-prices/cars-prices/Dockerfile.api /home/runner/work/cars-prices/cars-prices/Dockerfile
          
      # Display structure of downloaded files
      - name: Display structure of downloaded files
        run: |
          pwd
          ls -R

      - name: Build, Push and Deploy to Heroku #set the whatever name you want to this step
        id: heroku
        uses: jctaveras/heroku-deploy@v2.1.1  # use the latest version of the action
        with:
          email: soufiane.fartit@gmail.com # your heroku email
          api_key: ${{ secrets.HEROKU_API_KEY }} # your  heroku api key
          app_name: "cars-prices-api" # you aplication name
          dockerfile_path: '/home/runner/work/cars-prices/cars-prices' # set the path to the folder wher the Dokerfile is located